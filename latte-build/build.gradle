def VERSION_FILE = file('src/main/resources/version')
BufferedReader br = new BufferedReader(new FileReader(VERSION_FILE))
def VERSION = br.readLine().trim()
br.close()

def ACTION = System.getenv("BUILD_ACTION")

group 'org.latte-lang'
version VERSION

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'application'
apply plugin: 'maven'
if ('deploy' == ACTION) {
    apply plugin: 'signing'
}
apply plugin: LatteBuild

mainClassName = 'lt.repl.REPL'
applicationName = 'latte'

sourceCompatibility = 1.6
targetCompatibility = 1.6
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

configurations {
    provided
}

sourceSets {
    main.compileClasspath += configurations.provided
    test.compileClasspath += configurations.provided
    test.runtimeClasspath += configurations.provided
}

repositories {
    mavenLocal()
    mavenCentral()
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            def deploy_user = System.getenv('DEPLOY_USER')
            def deploy_pass = System.getenv('DEPLOY_PASS')

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: deploy_user, password: deploy_pass)
            }

            pom.project {
                name 'latte-build'
                packaging 'jar'
                description 'The project is to build the latte-lang modules into one, and provide command line support.'
                url 'http://latte-lang.org'
                scm {
                    url 'https://github.com/wkgcass/Latte-lang'
                    connection 'scm:git:https://github.com/wkgcass/Latte-lang.git'
                    developerConnection 'scm:git:https://github.com/wkgcass/Latte-lang.git'
                }
                licenses {
                    license {
                        name 'MIT LICENSE'
                        url 'https://github.com/wkgcass/Latte-lang/blob/master/LICENSE/'
                    }
                }
                developers {
                    developer {
                        id 'wkgcass'
                        email 'wkgcass@hotmail.com'
                    }
                }
            }
        }
    }
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from 'build/docs/javadoc'
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives jar
    archives javadocJar
    archives sourcesJar
}

javadoc {
    options {
        encoding 'UTF-8'
        charSet 'UTF-8'
    }
}

if (null == ACTION) {
    jar {
        manifest {
            attributes("Manifest-Version": 1.0,
                       "Main-Class": "lt.repl.REPL")
        }
        from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
        into('assets') {
            from 'assets'
        }
    }
}

if ('deploy' == ACTION) {
    signing {
        sign configurations.archives
    }
}

dependencies {
    compile group: 'org.latte-lang', name: 'latte-compiler', version: VERSION
    compile group: 'org.latte-lang', name: 'latte-library', version: VERSION
    provided group: 'jline', name: 'jline', version: '2.14.2'
}

class LatteBuild implements Plugin<Project> {
    @Override
    void apply(Project project) {
        def latteBuild = project.task('latteBuild')
        latteBuild.dependsOn project.tasks['assemble']

        project.task('latteTest') // do nothing

        def latteDeploy = project.task('latteDeploy')
        latteDeploy.dependsOn project.tasks['uploadArchives']
    }
}
